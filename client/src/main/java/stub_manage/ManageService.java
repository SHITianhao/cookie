
package stub_manage;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ManageService", targetNamespace = "http://webservice.tcf.polytech.unice.fr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ManageService {


    /**
     * 
     * @param adresse
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "isExist", targetNamespace = "")
    @RequestWrapper(localName = "boutiqueIsExist", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.BoutiqueIsExist")
    @ResponseWrapper(localName = "boutiqueIsExistResponse", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.BoutiqueIsExistResponse")
    public boolean boutiqueIsExist(
        @WebParam(name = "adresse", targetNamespace = "")
        String adresse);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(name = "ingredient_list", targetNamespace = "")
    @RequestWrapper(localName = "listIngredients", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.ListIngredients")
    @ResponseWrapper(localName = "listIngredientsResponse", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.ListIngredientsResponse")
    public List<String> listIngredients();

    /**
     * 
     * @param price
     * @param name
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "created", targetNamespace = "")
    @RequestWrapper(localName = "creatIngredient", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.CreatIngredient")
    @ResponseWrapper(localName = "creatIngredientResponse", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.CreatIngredientResponse")
    public boolean creatIngredient(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "price", targetNamespace = "")
        double price);

    /**
     * 
     * @param adresse
     * @param ouvert
     * @param taxe
     * @param fermer
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "boutiquecreated", targetNamespace = "")
    @RequestWrapper(localName = "creerBoutique", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.CreerBoutique")
    @ResponseWrapper(localName = "creerBoutiqueResponse", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.CreerBoutiqueResponse")
    public boolean creerBoutique(
        @WebParam(name = "adresse", targetNamespace = "")
        String adresse,
        @WebParam(name = "ouvert", targetNamespace = "")
        XMLGregorianCalendar ouvert,
        @WebParam(name = "fermer", targetNamespace = "")
        XMLGregorianCalendar fermer,
        @WebParam(name = "taxe", targetNamespace = "")
        double taxe);

    /**
     * 
     * @param name
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "isExist", targetNamespace = "")
    @RequestWrapper(localName = "ingredientIsExist", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.IngredientIsExist")
    @ResponseWrapper(localName = "ingredientIsExistResponse", targetNamespace = "http://webservice.tcf.polytech.unice.fr/", className = "stub_mange.IngredientIsExistResponse")
    public boolean ingredientIsExist(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
